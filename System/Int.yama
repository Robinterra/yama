namespace "System"
{
    /**
    * Integer current 16 Bit
    */
    public class Int
    {

        // -----------------------------------------------

        #region get/set

        // -----------------------------------------------

        #endregion get/set

        // -----------------------------------------------

        #region operator

        // -----------------------------------------------

        #region compare

        // -----------------------------------------------

        /**
        * Vergleich 2 Werte miteinander auf kleiner als
        *
        * @param[in] a (Int) Der Linke Child der vom Operator steht
        * @param[in] b (Int) Der Rechte Child der vom Operator steht
        *
        * @return (Bool) Wenn a kleiner ist dann true ansonsten false
        */
        public operator Bool <(Int a, Int b)
        {

        }

        // -----------------------------------------------

        /**
        * Compare 2 Values to Equal
        *
        * @param[in] a (Int) The left Child of the Operator
        * @param[in] b (Int) The rigth Child of the Operator
        *
        * @return (Bool) if equals then return true
        */
        public operator Bool ==(Int a, Int b)
        {
            return #defalgo IntCompare,Equals:;
        }

        // -----------------------------------------------

        #endregion compare

        // -----------------------------------------------

        #region arimetics

        // -----------------------------------------------

        /**
        * Subtrariere
        *
        * @param[in] a (Int) Der Linke Child der vom Operator steht
        * @param[in] b (Int) Der Rechte Child der vom Operator steht
        *
        * @return (Int) Das Ergebenis der Rechnung
        */
        public operator Int -(Int a, Int b)
        {

            return #defalgo IntArimetics,Subtraction:;
        }

        // -----------------------------------------------

        /**
        * Incrementiere um 1
        *
        * @param[in] a (Int) Der Linke oder Rechte Child der vom Operator steht
        *
        * @return (Int) Das Ergebenis der Rechnung
        */
        public operator Int ++(Int a)
        {
            return #defalgo IntArimetics,Incremtation:;
        }

        // -----------------------------------------------

        /**
        * Addiere
        *
        * @param[in] a (Int) Der Linke Child der vom Operator steht
        * @param[in] b (Int) Der Rechte Child der vom Operator steht
        *
        * @return (Int) Das Ergebenis der Rechnung
        */
        public operator Int +(Int a, Int b)
        {
            return #defalgo IntArimetics,Addition:;
        }

        // -----------------------------------------------

        #endregion arimetics

        // -----------------------------------------------

        #endregion operator

        // -----------------------------------------------

    }
}

// --[EOF]--