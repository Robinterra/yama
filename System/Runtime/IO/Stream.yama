namespace "System.Runtime.IO"
{
    using "System";
    using "System.IO";
    using "System.Collections";

    public class Stream
    {

        // -----------------------------------------------

        #region vars

        // -----------------------------------------------

        private ByteArray buffer;
        public bool IsReadable;
        public bool IsSeekable;
        public int RealPosition;
        public int RealReadedLength;
        public int BufferPosition;
        public int BufferLength;

        // -----------------------------------------------

        #endregion vars

        // -----------------------------------------------

        #region ctor

        // -----------------------------------------------

        public this new()
        {
            this.buffer = ByteArray.New[0x180];

            return this;
        }

        // -----------------------------------------------

        public this ~ (  )
        {
            this.buffer = ~this.buffer;
        }

        // -----------------------------------------------

        #endregion ctor

        // -----------------------------------------------

        #region methods

        // -----------------------------------------------

        public bool Flush()
        {
            return false;
        }

        // -----------------------------------------------

        public bool Write(ByteArray input)
        {
            int bufferCounter = this.BufferPosition;

            ByteArray buffer = this.buffer;
            for (int iCounter = 0; iCounter < input.Length; iCounter = iCounter + 1)
            {
                if (bufferCounter >= buffer.Length)
                {
                    this.Flush();
                    bufferCounter = 0;
                    this.BufferLength = 0;
                }

                int data = input.Data[iCounter];
                buffer.Data[bufferCounter] = data;
                bufferCounter = bufferCounter + 1;
            }

            this.BufferPosition = bufferCounter;
            this.BufferLength = bufferCounter;

            return true;
        }

        // -----------------------------------------------

        public bool Write(RefString input)
        {
            int bufferCounter = this.BufferPosition;

            ByteArray buffer = this.buffer;
            for (int iCounter = 0; iCounter < input.Length; iCounter = iCounter + 1)
            {
                if (bufferCounter >= buffer.Length)
                {
                    this.Flush();
                    bufferCounter = 0;
                    this.BufferLength = 0;
                }

                int data = input.Data[iCounter];
                buffer.Data[bufferCounter] = data;
                bufferCounter = bufferCounter + 1;
            }

            this.BufferPosition = bufferCounter;
            this.BufferLength = bufferCounter;

            return true;
        }


        // -----------------------------------------------

        public bool Seek(int position)
        {
            return false;
        }

        // -----------------------------------------------

        public bool ReadNext()
        {
            return false;
        }

        // -----------------------------------------------

        #endregion methods

        // -----------------------------------------------

    }
}

// --[EOF]--